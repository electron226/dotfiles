[[plugins]]
repo = 'Shougo/vimshell'
on_source = ['vimproc']
on_cmd =['VimShell', 'VimShellPop',' VimShellInteractive']

[[plugins]]
repo = 'Shougo/neocomplete'
on_i = 1

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_i = 1
on_source = ['neocomplete']

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_i = 1
on_source = ['neocomplete']

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1
on_source = ['neocomplete']

[[plugins]]
repo = 'honza/vim-snippets'
on_i = 1
on_source = ['neocomplete']

[[plugins]]
repo = 'tpope/vim-repeat'
on_source = ['vim-surround', 'vim-commentary']

[[plugins]]
repo = 'terryma/vim-expand-region'
on_map = ['<Plug>(expand_region_']

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TagbarToggle']

[[plugins]]
repo = 'wesleyche/SrcExpl'
on_cmd = ['SrcExplToggle']

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_cmd = ['EasyAlign', 'LiveEasyAlign']
on_map = ['<Plug>(EasyAlign)', '<Plug>(LiveEasyAlign)']

[[plugins]]
repo = 'DoxygenToolkit.vim'
on_cmd = [ 'Dox', 'DoxAuthor', 'DoxLic', 'DoxUndoc', 'DoxBlock' ]
on_ft = [ 'c', 'cpp', 'python' ]

[[plugins]]
repo = 'Rip-Rip/clang_complete'
on_ft = ['c', 'cpp']
on_source = ['neocomplete']

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp', 'objc']
on_source = ['vimproc']

[[plugins]]
repo = 'OmniSharp/omnisharp-vim'
on_ft = 'cs'
    [plugins.build]
    windows = 'msbuild server/OmniSharp.sln /p:Configuration=Release /p:Platform="Any CPU"'
    mac = 'cd server && xbuild'
    linux = 'cd server && xbuild'
    unix = 'cd server && xbuild'
    others = 'echo "Please build Omnisharp manually."'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'Blackrush/vim-gocode'
on_ft = ['go']
    [plugins.build]
    windows = 'go get -ldflags -H=windowsgui github.com/nsf/gocode'
    mac = 'go get github.com/nsf/gocode'
    linux = 'go get github.com/nsf/gocode'
    unix = 'go get github.com/nsf/gocode'
    others = 'echo "Please install vim-gocode manually."'

[[plugins]]
repo = 'dgryski/vim-godef'
on_ft = ['go']
    [plugins.build]
    windows = 'go get -v code.google.com/p/rog-go/exp/cmd/godef && go install -v code.google.com/p/rog-go/exp/cmd/godef'
    mac = 'go get -v code.google.com/p/rog-go/exp/cmd/godef && go install -v code.google.com/p/rog-go/exp/cmd/godef'
    linux = 'go get -v code.google.com/p/rog-go/exp/cmd/godef && go install -v code.google.com/p/rog-go/exp/cmd/godef'
    unix = 'go get -v code.google.com/p/rog-go/exp/cmd/godef && go install -v code.google.com/p/rog-go/exp/cmd/godef'
    others = 'echo "Please install vim-godef manually."'

[[plugins]]
repo = 'hdima/python-syntax'
on_ft = ['python']

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
on_source = ['neocomplete']
    [plugins.build]
    windows = 'pip3 install jedi'
    mac = 'pip3 install jedi'
    linux = 'pip3 install jedi'
    unix = 'pip3 install jedi'
    others = 'echo "Please install jedi manually."'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'javascript']

[[plugins]]
repo = 'gorodinskiy/vim-coloresque'
on_ft = ['html', 'css', 'less', 'scss']

[[plugins]]
repo = 'marijnh/tern_for_vim'
on_ft = ['html', 'javascript', 'coffee']
    [plugins.build]
    windows = 'npm install'
    mac = 'npm install'
    linux = 'npm install'
    unix = 'npm install'
    others = 'echo "Please install tern_for_vim manually."'

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
on_ft = ['html', 'javascript', 'coffee']

[[plugins]]
repo = 'moll/vim-node'
on_ft = ['javascript', 'coffee']
